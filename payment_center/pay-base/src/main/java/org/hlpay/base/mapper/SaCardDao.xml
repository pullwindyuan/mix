<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hlpay.base.mapper.SaCardDao">
  <resultMap id="BaseResultMap" type="org.hlpay.base.model.SaCard">
    <id column="CARD_ID" jdbcType="VARCHAR" property="cardId" />
    <result column="CARD_NUMBER" jdbcType="VARCHAR" property="cardNumber" />
    <result column="CARD_TYPE" jdbcType="VARCHAR" property="cardType" />
    <result column="CARD_NAME" jdbcType="VARCHAR" property="cardName" />
    <result column="CONFIG_NUMBER" jdbcType="VARCHAR" property="configNumber" />
    <result column="LOGIN_ACCOUNT" jdbcType="VARCHAR" property="loginAccount" />
    <result column="REMAIN_PART" jdbcType="BIGINT" property="remainPart" />
    <result column="FREEZE_PART" jdbcType="BIGINT" property="freezePart" />
    <result column="NOT_BILL" jdbcType="BIGINT" property="notBill" />
    <result column="CARD_STATUS" jdbcType="CHAR" property="cardStatus" />
    <result column="CARD_LIMIT" jdbcType="BIGINT" property="cardLimit" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="IS_DELETE" jdbcType="CHAR" property="isDelete" />
    <result column="FLAG" jdbcType="INTEGER" property="flag" />
    <result column="EXP_SUM" jdbcType="BIGINT" property="expSum" />
    <result column="RECHARGE_SUM" jdbcType="BIGINT" property="rechargeSum" />
    <result column="AWARD_SUM" jdbcType="BIGINT" property="awardSum" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CURRENCY" jdbcType="VARCHAR" property="currency" />
    <result column="VALID_START_TIME" jdbcType="TIMESTAMP" property="validStartTime" />
    <result column="VALID_END_TIME" jdbcType="TIMESTAMP" property="validEndTime" />
    <result column="YEAR_MONTH_GROUP" jdbcType="BIGINT" property="yearMonthGroup" />
    <result column="YEAR_GROUP" jdbcType="BIGINT" property="yearMonthGroup" />
  </resultMap>

  <resultMap id="BaseResultMapSettle" type="org.hlpay.base.model.SaSettleCard">
    <id column="CARD_ID" jdbcType="VARCHAR" property="cardId" />
    <result column="CARD_NUMBER" jdbcType="VARCHAR" property="cardNumber" />
    <result column="CARD_TYPE" jdbcType="VARCHAR" property="cardType" />
    <result column="CARD_NAME" jdbcType="VARCHAR" property="cardName" />
    <result column="CONFIG_NUMBER" jdbcType="VARCHAR" property="configNumber" />
    <result column="LOGIN_ACCOUNT" jdbcType="VARCHAR" property="loginAccount" />
    <result column="REMAIN_PART" jdbcType="BIGINT" property="tia" />
    <result column="FREEZE_PART" jdbcType="BIGINT" property="via" />
    <result column="NOT_BILL" jdbcType="BIGINT" property="cfa" />
    <result column="CARD_STATUS" jdbcType="CHAR" property="cardStatus" />
    <result column="CARD_LIMIT" jdbcType="BIGINT" property="cardLimit" />
    <result column="CREATE_TIME" jdbcType="TIMESTAMP" property="createTime" />
    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
    <result column="USER_ID" jdbcType="VARCHAR" property="userId" />
    <result column="IS_DELETE" jdbcType="CHAR" property="isDelete" />
    <result column="FLAG" jdbcType="INTEGER" property="flag" />
    <result column="EXP_SUM" jdbcType="BIGINT" property="wda" />
    <result column="RECHARGE_SUM" jdbcType="BIGINT" property="epa" />
    <result column="AWARD_SUM" jdbcType="BIGINT" property="pda" />
    <result column="UPDATE_TIME" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="CURRENCY" jdbcType="VARCHAR" property="currency" />
    <result column="VALID_START_TIME" jdbcType="TIMESTAMP" property="validStartTime" />
    <result column="VALID_END_TIME" jdbcType="TIMESTAMP" property="validEndTime" />
    <result column="YEAR_MONTH_GROUP" jdbcType="BIGINT" property="yearMonthGroup" />
    <result column="YEAR_GROUP" jdbcType="BIGINT" property="yearMonthGroup" />
  </resultMap>

  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Example_Where_Clause_Settle">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    CARD_ID, CARD_NUMBER, CARD_TYPE, CARD_NAME, CONFIG_NUMBER, LOGIN_ACCOUNT, REMAIN_PART, 
    FREEZE_PART, NOT_BILL, CARD_STATUS, CARD_LIMIT, CREATE_TIME, USER_NAME, USER_ID, 
    IS_DELETE, FLAG, EXP_SUM, RECHARGE_SUM, AWARD_SUM, UPDATE_TIME, CURRENCY, VALID_START_TIME, 
    VALID_END_TIME
  </sql>
  <select id="selectByExample" parameterType="org.hlpay.base.model.SaCardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sa_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>

  <select id="selectByExampleWithSettleStatus" parameterType="org.hlpay.base.model.SaCardExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sa_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>

    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>

  <select id="selectByExampleFromSettleCard" parameterType="org.hlpay.base.model.SaCardExample" resultMap="BaseResultMapSettle">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from sa_card_settle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause_Settle" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
    <if test="forUpdate != null and forUpdate == true">
      for update
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from sa_card
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </select>
  <select id="selectSettleByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from sa_card_settle
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sa_card
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="org.hlpay.base.model.SaCardExample">
    delete from sa_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" keyColumn="CARD_ID" keyProperty="cardId" parameterType="org.hlpay.base.model.SaCard" useGeneratedKeys="true">
    insert into sa_card (CARD_ID, CARD_NUMBER, CARD_TYPE, CARD_NAME,
      CONFIG_NUMBER, LOGIN_ACCOUNT, REMAIN_PART, 
      FREEZE_PART, NOT_BILL, CARD_STATUS, 
      CARD_LIMIT, CREATE_TIME, USER_NAME, 
      USER_ID, IS_DELETE, FLAG, 
      EXP_SUM, RECHARGE_SUM, AWARD_SUM, 
      UPDATE_TIME, CURRENCY, VALID_START_TIME, 
      VALID_END_TIME, YEAR_MONTH_GROUP, YEAR_GROUP)
    values (#{cardId,jdbcType=VARCHAR}, #{cardNumber,jdbcType=VARCHAR}, #{cardType,jdbcType=VARCHAR}, #{cardName,jdbcType=VARCHAR},
      #{configNumber,jdbcType=VARCHAR}, #{loginAccount,jdbcType=VARCHAR}, #{remainPart,jdbcType=BIGINT}, 
      #{freezePart,jdbcType=BIGINT}, #{notBill,jdbcType=BIGINT}, #{cardStatus,jdbcType=CHAR}, 
      #{cardLimit,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{userName,jdbcType=VARCHAR}, 
      #{userId,jdbcType=VARCHAR}, #{isDelete,jdbcType=CHAR}, #{flag,jdbcType=INTEGER}, 
      #{expSum,jdbcType=BIGINT}, #{rechargeSum,jdbcType=BIGINT}, #{awardSum,jdbcType=BIGINT}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{currency,jdbcType=VARCHAR}, #{validStartTime,jdbcType=TIMESTAMP}, 
      #{validEndTime,jdbcType=TIMESTAMP}, #{yearMonthGroup,jdbcType=BIGINT}, #{yearGroup,jdbcType=BIGINT})
  </insert>
  <insert id="insertToSettleCard" keyColumn="CARD_ID" keyProperty="cardId" parameterType="org.hlpay.base.model.SaCard" useGeneratedKeys="true">
    insert into sa_card_settle (CARD_ID, CARD_NUMBER, CARD_TYPE, CARD_NAME,
      CONFIG_NUMBER, LOGIN_ACCOUNT, REMAIN_PART,
      FREEZE_PART, NOT_BILL, CARD_STATUS,
      CARD_LIMIT, CREATE_TIME, USER_NAME,
      USER_ID, IS_DELETE, FLAG,
      EXP_SUM, RECHARGE_SUM, AWARD_SUM,
      UPDATE_TIME, CURRENCY, VALID_START_TIME,
      VALID_END_TIME, YEAR_MONTH_GROUP, YEAR_GROUP)
    values (#{cardId,jdbcType=VARCHAR}, #{cardNumber,jdbcType=VARCHAR}, #{cardType,jdbcType=VARCHAR}, #{cardName,jdbcType=VARCHAR},
      #{configNumber,jdbcType=VARCHAR}, #{loginAccount,jdbcType=VARCHAR}, #{remainPart,jdbcType=BIGINT},
      #{freezePart,jdbcType=BIGINT}, #{notBill,jdbcType=BIGINT}, #{cardStatus,jdbcType=CHAR},
      #{cardLimit,jdbcType=BIGINT}, #{createTime,jdbcType=TIMESTAMP}, #{userName,jdbcType=VARCHAR},
      #{userId,jdbcType=VARCHAR}, #{isDelete,jdbcType=CHAR}, #{flag,jdbcType=INTEGER},
      #{expSum,jdbcType=BIGINT}, #{rechargeSum,jdbcType=BIGINT}, #{awardSum,jdbcType=BIGINT},
      #{updateTime,jdbcType=TIMESTAMP}, #{currency,jdbcType=VARCHAR}, #{validStartTime,jdbcType=TIMESTAMP},
      #{validEndTime,jdbcType=TIMESTAMP}, #{yearMonthGroup,jdbcType=BIGINT}, #{yearGroup,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" keyColumn="CARD_ID" keyProperty="cardId" parameterType="org.hlpay.base.model.SaCard" useGeneratedKeys="true">
    insert into sa_card
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="cardNumber != null">
        CARD_NUMBER,
      </if>
      <if test="cardType != null">
        CARD_TYPE,
      </if>
      <if test="cardName != null">
        CARD_NAME,
      </if>
      <if test="configNumber != null">
        CONFIG_NUMBER,
      </if>
      <if test="loginAccount != null">
        LOGIN_ACCOUNT,
      </if>
      <if test="remainPart != null">
        REMAIN_PART,
      </if>
      <if test="freezePart != null">
        FREEZE_PART,
      </if>
      <if test="notBill != null">
        NOT_BILL,
      </if>
      <if test="cardStatus != null">
        CARD_STATUS,
      </if>
      <if test="cardLimit != null">
        CARD_LIMIT,
      </if>
      <if test="createTime != null">
        CREATE_TIME,
      </if>
      <if test="userName != null">
        USER_NAME,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="isDelete != null">
        IS_DELETE,
      </if>
      <if test="flag != null">
        FLAG,
      </if>
      <if test="expSum != null">
        EXP_SUM,
      </if>
      <if test="rechargeSum != null">
        RECHARGE_SUM,
      </if>
      <if test="awardSum != null">
        AWARD_SUM,
      </if>
      <if test="updateTime != null">
        UPDATE_TIME,
      </if>
      <if test="currency != null">
        CURRENCY,
      </if>
      <if test="validStartTime != null">
        VALID_START_TIME,
      </if>
      <if test="validEndTime != null">
        VALID_END_TIME,
      </if>
      <if test="yearMonthGroup != null">
        YEAR_MONTH_GROUP,
      </if>
      <if test="yearGroup != null">
        YEAR_GROUP,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="cardNumber != null">
        #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null">
        #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null">
        #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="configNumber != null">
        #{configNumber,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="remainPart != null">
        #{remainPart,jdbcType=BIGINT},
      </if>
      <if test="freezePart != null">
        #{freezePart,jdbcType=BIGINT},
      </if>
      <if test="notBill != null">
        #{notBill,jdbcType=BIGINT},
      </if>
      <if test="cardStatus != null">
        #{cardStatus,jdbcType=CHAR},
      </if>
      <if test="cardLimit != null">
        #{cardLimit,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=CHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
      <if test="expSum != null">
        #{expSum,jdbcType=BIGINT},
      </if>
      <if test="rechargeSum != null">
        #{rechargeSum,jdbcType=BIGINT},
      </if>
      <if test="awardSum != null">
        #{awardSum,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currency != null">
        #{currency,jdbcType=VARCHAR},
      </if>
      <if test="validStartTime != null">
        #{validStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validEndTime != null">
        #{validEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="yearMonthGroup != null">
      #{yearMonthGroup,jdbcType=BIGINT},
      </if>
      <if test="yearGroup != null">
      #{yearGroup,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hlpay.base.model.SaCardExample" resultType="java.lang.Long">
    select count(*) from sa_card
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <select id="countByExampleFromSettleCard" parameterType="org.hlpay.base.model.SaCardExample" resultType="java.lang.Long">
    select count(*) from sa_card_settle
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update sa_card
    <set>
      <if test="record.cardId != null">
        CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      </if>
      <if test="record.cardNumber != null">
        CARD_NUMBER = #{record.cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.cardType != null">
        CARD_TYPE = #{record.cardType,jdbcType=VARCHAR},
      </if>
      <if test="record.cardName != null">
        CARD_NAME = #{record.cardName,jdbcType=VARCHAR},
      </if>
      <if test="record.configNumber != null">
        CONFIG_NUMBER = #{record.configNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.loginAccount != null">
        LOGIN_ACCOUNT = #{record.loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.remainPart != null">
        REMAIN_PART = #{record.remainPart,jdbcType=BIGINT},
      </if>
      <if test="record.freezePart != null">
        FREEZE_PART = #{record.freezePart,jdbcType=BIGINT},
      </if>
      <if test="record.notBill != null">
        NOT_BILL = #{record.notBill,jdbcType=BIGINT},
      </if>
      <if test="record.cardStatus != null">
        CARD_STATUS = #{record.cardStatus,jdbcType=CHAR},
      </if>
      <if test="record.cardLimit != null">
        CARD_LIMIT = #{record.cardLimit,jdbcType=BIGINT},
      </if>
      <if test="record.createTime != null">
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.userName != null">
        USER_NAME = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.isDelete != null">
        IS_DELETE = #{record.isDelete,jdbcType=CHAR},
      </if>
      <if test="record.flag != null">
        FLAG = #{record.flag,jdbcType=INTEGER},
      </if>
      <if test="record.expSum != null">
        EXP_SUM = #{record.expSum,jdbcType=BIGINT},
      </if>
      <if test="record.rechargeSum != null">
        RECHARGE_SUM = #{record.rechargeSum,jdbcType=BIGINT},
      </if>
      <if test="record.awardSum != null">
        AWARD_SUM = #{record.awardSum,jdbcType=BIGINT},
      </if>
      <if test="record.updateTime != null">
        UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.currency != null">
        CURRENCY = #{record.currency,jdbcType=VARCHAR},
      </if>
      <if test="record.validStartTime != null">
        VALID_START_TIME = #{record.validStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.validEndTime != null">
        VALID_END_TIME = #{record.validEndTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update sa_card
    set CARD_ID = #{record.cardId,jdbcType=VARCHAR},
      CARD_NUMBER = #{record.cardNumber,jdbcType=VARCHAR},
      CARD_TYPE = #{record.cardType,jdbcType=VARCHAR},
      CARD_NAME = #{record.cardName,jdbcType=VARCHAR},
      CONFIG_NUMBER = #{record.configNumber,jdbcType=VARCHAR},
      LOGIN_ACCOUNT = #{record.loginAccount,jdbcType=VARCHAR},
      REMAIN_PART = #{record.remainPart,jdbcType=BIGINT},
      FREEZE_PART = #{record.freezePart,jdbcType=BIGINT},
      NOT_BILL = #{record.notBill,jdbcType=BIGINT},
      CARD_STATUS = #{record.cardStatus,jdbcType=CHAR},
      CARD_LIMIT = #{record.cardLimit,jdbcType=BIGINT},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      USER_NAME = #{record.userName,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      IS_DELETE = #{record.isDelete,jdbcType=CHAR},
      FLAG = #{record.flag,jdbcType=INTEGER},
      EXP_SUM = #{record.expSum,jdbcType=BIGINT},
      RECHARGE_SUM = #{record.rechargeSum,jdbcType=BIGINT},
      AWARD_SUM = #{record.awardSum,jdbcType=BIGINT},
      UPDATE_TIME = #{record.updateTime,jdbcType=TIMESTAMP},
      CURRENCY = #{record.currency,jdbcType=VARCHAR},
      VALID_START_TIME = #{record.validStartTime,jdbcType=TIMESTAMP},
      VALID_END_TIME = #{record.validEndTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hlpay.base.model.SaCard">
    update sa_card
    <set>
      <if test="cardNumber != null">
        CARD_NUMBER = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null">
        CARD_TYPE = #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null">
        CARD_NAME = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="configNumber != null">
        CONFIG_NUMBER = #{configNumber,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        LOGIN_ACCOUNT = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="remainPart != null">
        REMAIN_PART = #{remainPart,jdbcType=BIGINT},
      </if>
      <if test="freezePart != null">
        FREEZE_PART = FREEZE_PART + #{freezePart,jdbcType=BIGINT},
      </if>
      <if test="notBill != null">
        NOT_BILL = NOT_BILL + #{notBill,jdbcType=BIGINT},
      </if>
      <if test="cardStatus != null">
        CARD_STATUS = #{cardStatus,jdbcType=CHAR},
      </if>
      <if test="cardLimit != null">
        CARD_LIMIT = #{cardLimit,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        IS_DELETE = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=INTEGER},
      </if>
      <if test="expSum != null">
        EXP_SUM = EXP_SUM + #{expSum,jdbcType=BIGINT},
      </if>
      <if test="rechargeSum != null">
        RECHARGE_SUM = RECHARGE_SUM + #{rechargeSum,jdbcType=BIGINT},
      </if>
      <if test="awardSum != null">
        AWARD_SUM = AWARD_SUM + #{awardSum,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currency != null">
        CURRENCY = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="validStartTime != null">
        VALID_START_TIME = #{validStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validEndTime != null">
        VALID_END_TIME = #{validEndTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hlpay.base.model.SaCard">
    update sa_card
    set CARD_NUMBER = #{cardNumber,jdbcType=VARCHAR},
      CARD_TYPE = #{cardType,jdbcType=VARCHAR},
      CARD_NAME = #{cardName,jdbcType=VARCHAR},
      CONFIG_NUMBER = #{configNumber,jdbcType=VARCHAR},
      LOGIN_ACCOUNT = #{loginAccount,jdbcType=VARCHAR},
      REMAIN_PART = #{remainPart,jdbcType=BIGINT},
      FREEZE_PART = #{freezePart,jdbcType=BIGINT},
      NOT_BILL = #{notBill,jdbcType=BIGINT},
      CARD_STATUS = #{cardStatus,jdbcType=CHAR},
      CARD_LIMIT = #{cardLimit,jdbcType=BIGINT},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      USER_NAME = #{userName,jdbcType=VARCHAR},
      USER_ID = #{userId,jdbcType=VARCHAR},
      IS_DELETE = #{isDelete,jdbcType=CHAR},
      FLAG = #{flag,jdbcType=INTEGER},
      EXP_SUM = #{expSum,jdbcType=BIGINT},
      RECHARGE_SUM = #{rechargeSum,jdbcType=BIGINT},
      AWARD_SUM = #{awardSum,jdbcType=BIGINT},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CURRENCY = #{currency,jdbcType=VARCHAR},
      VALID_START_TIME = #{validStartTime,jdbcType=TIMESTAMP},
      VALID_END_TIME = #{validEndTime,jdbcType=TIMESTAMP}
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyFromSettleCardBySelective" parameterType="org.hlpay.base.model.SaCard">
    update sa_card
    <set>
      <if test="cardNumber != null">
        CARD_NUMBER = #{cardNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardType != null">
        CARD_TYPE = #{cardType,jdbcType=VARCHAR},
      </if>
      <if test="cardName != null">
        CARD_NAME = #{cardName,jdbcType=VARCHAR},
      </if>
      <if test="configNumber != null">
        CONFIG_NUMBER = #{configNumber,jdbcType=VARCHAR},
      </if>
      <if test="loginAccount != null">
        LOGIN_ACCOUNT = #{loginAccount,jdbcType=VARCHAR},
      </if>
      <if test="remainPart != null">
        REMAIN_PART = #{remainPart,jdbcType=BIGINT},
      </if>
      <if test="freezePart != null">
        FREEZE_PART = #{freezePart,jdbcType=BIGINT},
      </if>
      <if test="notBill != null">
        NOT_BILL = #{notBill,jdbcType=BIGINT},
      </if>
      <if test="cardStatus != null">
        CARD_STATUS = #{cardStatus,jdbcType=CHAR},
      </if>
      <if test="cardLimit != null">
        CARD_LIMIT = #{cardLimit,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="userName != null">
        USER_NAME = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="isDelete != null">
        IS_DELETE = #{isDelete,jdbcType=CHAR},
      </if>
      <if test="flag != null">
        FLAG = #{flag,jdbcType=INTEGER},
      </if>
      <if test="expSum != null">
        EXP_SUM = #{expSum,jdbcType=BIGINT},
      </if>
      <if test="rechargeSum != null">
        RECHARGE_SUM = #{rechargeSum,jdbcType=BIGINT},
      </if>
      <if test="awardSum != null">
        AWARD_SUM = #{awardSum,jdbcType=BIGINT},
      </if>
      <if test="updateTime != null">
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="currency != null">
        CURRENCY = #{currency,jdbcType=VARCHAR},
      </if>
      <if test="validStartTime != null">
        VALID_START_TIME = #{validStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="validEndTime != null">
        VALID_END_TIME = #{validEndTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKeyFromSettleCard" parameterType="org.hlpay.base.model.SaCard">
    update sa_card_settle
    set CARD_STATUS = #{cardStatus,jdbcType=CHAR},
      FREEZE_PART = #{freezePart,jdbcType=BIGINT},
      NOT_BILL = #{notBill,jdbcType=BIGINT},
      EXP_SUM = #{expSum,jdbcType=BIGINT},
      RECHARGE_SUM = #{rechargeSum,jdbcType=BIGINT},
      AWARD_SUM = #{awardSum,jdbcType=BIGINT}
    where CARD_ID = #{cardId,jdbcType=VARCHAR}
  </update>

  <select id="getMonthSettleSum" resultMap="BaseResultMapSettle" parameterType="org.hlpay.base.model.SaSettleCardSum" >
    select USER_NAME, CURRENCY, YEAR_MONTH_GROUP,
            sum(REMAIN_PART) as remainPart, sum(FREEZE_PART) as freezePart,
            sum(NOT_BILL) as notBill, sum(EXP_SUM) as expSum, sum(RECHARGE_SUM) as rechargeSum, sum(AWARD_SUM) as awardSum
    from sa_card_settle
    where LOGIN_ACCOUNT != 1
      <if test="validStartTime != null" >
        and (VALID_END_TIME between #{validStartTime,jdbcType=TIMESTAMP} and #{validEndTime,jdbcType=TIMESTAMP})
      </if>
      <if test="cardStatus != null" >
        and CARD_STATUS = #{cardStatus,jdbcType=CHAR}
      </if>
      <if test="currency != null" >
        and CURRENCY = #{currency,jdbcType=VARCHAR}
      </if>
      <if test="userName != null" >
        and USER_NAME = #{userName,jdbcType=VARCHAR}
      </if>
    group by USER_NAME,CURRENCY,YEAR_MONTH_GROUP order by USER_NAME asc, YEAR_MONTH_GROUP asc
  </select>

  <select id="getMonthSettleByUserSum" resultMap="BaseResultMapSettle" parameterType="org.hlpay.base.model.SaSettleCardSum" >
    select USER_NAME, CURRENCY,
    sum(REMAIN_PART) as remainPart, sum(FREEZE_PART) as freezePart,
    sum(NOT_BILL) as notBill, sum(EXP_SUM) as expSum, sum(RECHARGE_SUM) as rechargeSum, sum(AWARD_SUM) as awardSum
    from sa_card_settle
    where LOGIN_ACCOUNT != 1
    <if test="validStartTime != null" >
      and (VALID_END_TIME between #{validStartTime,jdbcType=TIMESTAMP} and #{validEndTime,jdbcType=TIMESTAMP})
    </if>
      <if test="cardStatus != null" >
        and CARD_STATUS = #{cardStatus,jdbcType=CHAR}
      </if>
      <if test="currency != null" >
        and CURRENCY = #{currency,jdbcType=VARCHAR}
      </if>
      <if test="userName != null" >
        and USER_NAME = #{userName,jdbcType=VARCHAR}
      </if>
    group by USER_NAME,CURRENCY order by USER_NAME asc
  </select>

  <select id="getPlatformMonthSettleSum" resultMap="BaseResultMapSettle" parameterType="org.hlpay.base.model.SaSettleCardSum" >
    select CURRENCY, YEAR_MONTH_GROUP,
    sum(REMAIN_PART) as remainPart, sum(FREEZE_PART) as freezePart,
    sum(NOT_BILL) as notBill, sum(EXP_SUM) as expSum, sum(RECHARGE_SUM) as rechargeSum, sum(AWARD_SUM) as awardSum
    from sa_card_settle
    where LOGIN_ACCOUNT != 1
    <if test="validStartTime != null" >
      and (VALID_END_TIME between #{validStartTime,jdbcType=TIMESTAMP} and #{validEndTime,jdbcType=TIMESTAMP})
    </if>
      <if test="cardStatus != null" >
        and CARD_STATUS = #{cardStatus,jdbcType=CHAR}
      </if>
      <if test="currency != null" >
        and CURRENCY = #{currency,jdbcType=VARCHAR}
      </if>
      <if test="userName != null" >
        and USER_NAME = #{userName,jdbcType=VARCHAR}
      </if>
    group by CURRENCY,YEAR_MONTH_GROUP order by YEAR_MONTH_GROUP asc
  </select>

  <select id="getPlatformSettleSum" resultMap="BaseResultMapSettle" parameterType="org.hlpay.base.model.SaSettleCardSum" >
    select CURRENCY,
    sum(REMAIN_PART) as remainPart, sum(FREEZE_PART) as freezePart,
    sum(NOT_BILL) as notBill, sum(EXP_SUM) as expSum, sum(RECHARGE_SUM) as rechargeSum, sum(AWARD_SUM) as awardSum
    from sa_card_settle
    where LOGIN_ACCOUNT != 1
    <if test="validStartTime != null" >
      and (VALID_END_TIME between #{validStartTime,jdbcType=TIMESTAMP} and #{validEndTime,jdbcType=TIMESTAMP})
    </if>
      <if test="cardStatus != null" >
        and (CARD_STATUS = '3' or CARD_STATUS = '4')
      </if>
      <if test="currency != null" >
        and CURRENCY = #{currency,jdbcType=VARCHAR}
      </if>
      <if test="userName != null" >
        and USER_NAME = #{userName,jdbcType=VARCHAR}
      </if>
    group by CURRENCY
  </select>

  <select id="getMonthSettleSumByMchInfo" resultMap="BaseResultMapSettle" parameterType="org.hlpay.base.model.SaSettleCardSum" >
    select USER_ID, CURRENCY, YEAR_MONTH_GROUP,
    sum(REMAIN_PART) as remainPart, sum(FREEZE_PART) as freezePart,
    sum(NOT_BILL) as notBill, sum(EXP_SUM) as expSum, sum(RECHARGE_SUM) as rechargeSum, sum(AWARD_SUM) as awardSum
    from sa_card_settle
    where 1=1
    <if test="validStartTime != null" >
      and (VALID_END_TIME between #{validStartTime,jdbcType=TIMESTAMP} and #{validEndTime,jdbcType=TIMESTAMP})
    </if>
    <if test="cardStatus != null" >
      and (CARD_STATUS = '2' or CARD_STATUS = '3' or CARD_STATUS = '4')
    </if>
    <if test="currency != null" >
      and CURRENCY = #{currency,jdbcType=VARCHAR}
    </if>
    <if test="mchId != null" >
      and USER_ID = #{mchId,jdbcType=VARCHAR}
    </if>
    group by CURRENCY,YEAR_MONTH_GROUP order by YEAR_MONTH_GROUP asc
  </select>
</mapper>
